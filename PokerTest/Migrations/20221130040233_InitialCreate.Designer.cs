// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokerTest.Data;

#nullable disable

namespace PokerTest.Migrations
{
    [DbContext(typeof(PokerDbContext))]
    [Migration("20221130040233_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PokerTest.Data.Models.Point", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Points");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Value = 1
                        },
                        new
                        {
                            Id = 2,
                            Value = 2
                        },
                        new
                        {
                            Id = 3,
                            Value = 3
                        },
                        new
                        {
                            Id = 4,
                            Value = 5
                        },
                        new
                        {
                            Id = 5,
                            Value = 8
                        },
                        new
                        {
                            Id = 6,
                            Value = 13
                        },
                        new
                        {
                            Id = 7,
                            Value = 21
                        },
                        new
                        {
                            Id = 8,
                            Value = 34
                        });
                });

            modelBuilder.Entity("PokerTest.Data.Models.Sprint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Sprints");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EndDate = new DateTime(2023, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "First Sprint",
                            StartDate = new DateTime(2023, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            EndDate = new DateTime(2023, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Second Sprint",
                            StartDate = new DateTime(2023, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            EndDate = new DateTime(2023, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Third Sprint",
                            StartDate = new DateTime(2023, 3, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PokerTest.Data.Models.Story", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DevopsNumber")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PointId")
                        .HasColumnType("int");

                    b.Property<int?>("SprintId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PointId");

                    b.HasIndex("SprintId");

                    b.ToTable("Stories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DevopsNumber = 14556,
                            Notes = "Do the first mock task.",
                            Title = "Mock Task #1"
                        },
                        new
                        {
                            Id = 2,
                            DevopsNumber = 13645,
                            Notes = "Do the second mock task.",
                            Title = "Mock Task #2"
                        },
                        new
                        {
                            Id = 3,
                            DevopsNumber = 15871,
                            Notes = "Do the third mock task.",
                            Title = "Mock Task #3"
                        },
                        new
                        {
                            Id = 4,
                            DevopsNumber = 15662,
                            Notes = "Do the fourth mock task.",
                            Title = "Mock Task #4"
                        },
                        new
                        {
                            Id = 5,
                            DevopsNumber = 15998,
                            Notes = "Do the fifth mock task.",
                            Title = "Mock Task #5"
                        });
                });

            modelBuilder.Entity("PokerTest.Data.Models.Story", b =>
                {
                    b.HasOne("PokerTest.Data.Models.Point", "Point")
                        .WithMany()
                        .HasForeignKey("PointId");

                    b.HasOne("PokerTest.Data.Models.Sprint", "Sprint")
                        .WithMany("Stories")
                        .HasForeignKey("SprintId");

                    b.Navigation("Point");

                    b.Navigation("Sprint");
                });

            modelBuilder.Entity("PokerTest.Data.Models.Sprint", b =>
                {
                    b.Navigation("Stories");
                });
#pragma warning restore 612, 618
        }
    }
}
